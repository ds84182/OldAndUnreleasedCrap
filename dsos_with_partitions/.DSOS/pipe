--Ugh... I have to remake the term api--
local pipe = {}
local pipes = {}
local cursoron = false
local cursorpos = {x=1,y=1}
local function exists(p,x,y)
	if pipes[p][x] == nil then return false end
	if pipes[p][x][y] == nil then return false end
	return true
end
function pipe.new(w,h)
	local id = 1
	while pipes[id] ~= nil do id = id+1 end
	local ret = {}
	ret.w = w
	ret.h = h
	ret.fg = {}
	ret.bg = {}
	for x=1, w do
		ret[x] = {}
		ret.fg[x] = {}
		ret.bg[x] = {}
		for y=1, h do
			ret[x][y] = " "
			ret.fg[x][y] = colors.white
			ret.bg[x][y] = colors.black
		end
	end
	ret.visible = true
	ret.cpos = {x=1,y=1}
	ret.con = false
	ret.pos = {x=0,y=0}
	ret.out = 0
	pipes[id] = ret
	return id
end
function pipe.afterDraw()
	term.setCursorBlink(cursoron)
	term.setCursorPos(cursorpos.x,cursorpos.y)
	cursoron = false
end
function pipe.setVisible(id,v)
	pipes[id].visible = v==true
end
function pipe.isVisible(id)
	return pipes[id].visible == true
end
function pipe.draw(id)
	term.setCursorBlink(false)
	local tmp = {t="",fg=-1,bg=-1}
	local p = pipes[id]
	if p.visible then
		for y=1, p.h do
			term.setCursorPos(1+p.pos.x,y+p.pos.y)
			tmp = {t="",fg=-1,bg=-1}
			for x=1, p.w do
				if p.fg[x][y] ~= tmp.fg then
					if tmp.fg ~= -1 then
						term.write(tmp.t)
					end
					tmp.fg = p.fg[x][y]
					tmp.t = ""
					term.setTextColor(tmp.fg)
				end
				if p.bg[x][y] ~= tmp.bg then
					if tmp.bg ~= -1 then
						term.write(tmp.t)
					end
					tmp.bg = p.bg[x][y]
					tmp.t = ""
					term.setBackgroundColor(tmp.bg)
				end
				tmp.t = tmp.t..p[x][y]
			end
			term.write(tmp.t)
		end
		if p.con then
			cursoron = true
			cursorpos = p.cpos
		end
	end
end
function pipe.getAllPipes()
	return pipes
end
function pipe.getAPI(id)
	local term = {}
	local tx, ty = 1, 1
	local fg, bg = colors.white, colors.black
	local p = pipes[id]
	function term.setCursorBlink(b)
		p.con = b == true
	end
	function term.getCursorPos()
		return tx, ty
	end
	function term.setCursorPos(x,y)
		if type(x) ~= "number" or type(y) ~= "number" then error("expected number, number",1) end
		tx = x
		ty = y
		p.cpos.x = x
		p.cpos.y = y
	end
	function term.setBackgroundColor(c)
		if type(c) ~= "number" then error("expected number",1) end
		bg = c
	end
	function term.setTextColor(c)
		if type(c) ~= "number" then error("expected number",1) end
		fg = c
	end
	function term.write(t)
		if type(t) ~= "string" then error("expected string",1) end
		for i=1, #t do
			if exists(id,tx+i-1,ty) then
				pipes[id][tx+i-1][ty] = string.char(t:byte(i))
				pipes[id].fg[tx+i-1][ty] = fg
				pipes[id].bg[tx+i-1][ty] = bg
			end
		end
		tx = tx+#t
		p.cpos.x = tx
	end
	function term.isColor()
		return true
	end
	function term.getSize()
		return pipes[id].w, pipes[id].h
	end
	function term.clear()
		for y=1, pipes[id].h do
			for x=1, pipes[id].w do
				pipes[id][x][y] = " "
				pipes[id].fg[x][y] = fg
				pipes[id].bg[x][y] = bg
			end
		end
	end
	function term.clearLine()
		local y = ty
		for x=1, pipes[id].w do
			pipes[id][x][y] = " "
			pipes[id].fg[x][y] = fg
			pipes[id].bg[x][y] = bg
		end
	end
	return term
end

return pipe